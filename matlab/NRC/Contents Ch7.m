% ---------- CHAPTER 7: DATA MANIPULATION: SORTING, INTERPOLATION, & COMPRESSION ----------
% Attendant to the text <a href="matlab:web('http://numerical-renaissance.com/')">Numerical Renaissance: simulation, optimization, & control</a>
% Files in Chapter 7 of <a href="matlab:help NRC">Numerical Renaissance Codebase 1.0</a>:
%   InsertionSort           - function [D,index]=InsertionSort(D,v,n)
%   InsertionSortTest       - script <a href="matlab:InsertionSortTest">InsertionSortTest</a>
%   BlockInsertionSort      - function [D,index]=BlockInsertionSort(D,v,n)
%   BlockInsertionSortTest  - script <a href="matlab:BlockInsertionSortTest">BlockInsertionSortTest</a>
%   CocktailSort            - function [D,index]=CocktailSort(D,v,n)
%   CocktailSortTest        - script <a href="matlab:CocktailSortTest">CocktailSortTest</a>
%   MergeSort               - function [D,index]=MergeSort(D,v,a,b)
%   MergeSortTest           - script <a href="matlab:MergeSortTest">MergeSortTest</a>
%   QuickSort               - function [D,index]=QuickSort(D,v,i,k)
%   QuickSortTest           - script <a href="matlab:QuickSortTest">QuickSortTest</a>
%   HeapSort                - function [D,index]=HeapSort(D,v,n)
%   HeapSortTest            - script <a href="matlab:HeapSortTest">HeapSortTest</a>
%   BSTinitialize           - function [D,r]=BSTinitialize(D)
%   BSTinsert               - function [D,r]=BSTinsert(D,n,r)
%   BSTrotateLR             - function [D,q]=BSTrotateLR(D,q)
%   BSTrotateL              - function [D,d]=BSTrotateL(D,b)
%   BSTrotateR              - function [D,b]=BSTrotateR(D,d)
%   BSTenumerate            - function index=BSTenumerate(D,r)
%   BSTsuccessor            - function [s]=BSTsuccessor(D,r)
%   BSTtest                 - script <a href="matlab:BSTtest">BSTtest</a>
%   BSTplot                 - function BSTplot(D,r,x,y)
%   BSTbalance              - function [D,q]=BSTbalance(D,q)
%   BitonicSort             - function [D,index]=BitonicSort(D,v,n)
%   BitonicSortTest         - script <a href="matlab:BitonicSortTest">BitonicSortTest</a>
%   OddEvenMergeSort        - function [D,index]=OddEvenMergeSort(D,v,a,n)
%   OddEvenMergeSortTest    - script <a href="matlab:OddEvenMergeSortTest">OddEvenMergeSortTest</a>
%   LinearSpline            - function [f]=LinearSpline(x,xd,fd)
%   LinearSplineTest        - script <a href="matlab:LinearSplineTest">LinearSplineTest</a>
%   Lagrange                - function [f]=Lagrange(x,xd,fd)
%   LagrangeTest            - script <a href="matlab:LagrangeTest">LagrangeTest</a>
%   CubicSplineSetup        - function [fpp,h]=CubicSplineSetup(xd,fd,end_conditions)
%   CubicSpline             - function [f,fp]=CubicSpline(x,xd,fd,fpp,h)
%   CubicSplineTest         - script <a href="matlab:CubicSplineTest">CubicSplineTest</a>
%   BilinearSpline          - function [f]=BilinearSpline(x,y,xd,yd,fd)
%   BilinearSplineTest      - script <a href="matlab:BilinearSplineTest">BilinearSplineTest</a>
%   BicubicSplineSetup      - function [fx,fy,fxy,Ainv]=BicubicSplineSetup(xd,yd,fd,ec)
%   BicubicSpline           - function [f]=BicubicSpline(x,y,xd,yd,fd,fx,fy,fxy,Ainv)
%   BicubicSplineTest       - script <a href="matlab:BicubicSplineTest">BicubicSplineTest</a>
%   InvDistanceInterp       - function [f0]=InvDistanceInterp(x0,x,f,p,R)
%   InvDistanceInterpTest   - script <a href="matlab:InvDistanceInterpTest">InvDistanceInterpTest</a>
%   PolyharmonicSplineSetup - function [w,v]=PolyharmonicSplineSetup(c,y,k)
%   PolyharmonicSpline      - function [f]=PolyharmonicSpline(x,c,v,w,k)
%   PolyharmonicSplineTest  - script <a href="matlab:PolyharmonicSplineTest">PolyharmonicSplineTest</a>
%   PODtest                 - script <a href="matlab:PODtest">PODtest</a>
%   NN_ForwardPropagate     - function [x]=NN_ForwardPropagate(y,w,h,n)
%   NN_BackPropagate        - function [g]=NN_BackPropagate(e,x,w,h,n)
%   NN_ComputeCost          - function [J]=NN_ComputeCost(y,u,N,w,h,n)
%   NN_SequentialTrain      - function [w]=NN_SequentialTrain(alpha,max_iters,y,u,N,w,h,n)
%   NN_Test                 - script <a href="matlab:NN_Test">NN_Test</a>
% <a href="matlab:help NRchap06"><-previous</a> ---------- please read the <a href="matlab:help NRcopyleft">copyleft</a>, and please <a href="matlab:help NRsupport">support</a> us! ----------- <a href="matlab:help NRchap08">next-></a>
